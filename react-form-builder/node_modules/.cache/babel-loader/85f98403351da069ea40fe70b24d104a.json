{"ast":null,"code":"import axios from 'axios';\nconst AI_SERVICE_URL = 'https://api.example.com/ai'; // Replace with actual AI service URL\n\nexport const generateValidationRules = async fieldType => {\n  try {\n    const response = await axios.post(`${AI_SERVICE_URL}/validation-rules`, {\n      fieldType\n    });\n    return response.data.rules;\n  } catch (error) {\n    console.error('Error generating validation rules:', error);\n    throw error;\n  }\n};\nexport function getFieldSuggestions(input) {\n  // Example implementation, replace with your AI logic\n  return [{\n    label: 'Email',\n    type: 'email',\n    validationRules: [{\n      rule: 'required',\n      message: 'Email is required',\n      regex: '^[^@\\\\s]+@[^@\\\\s]+\\\\.[^@\\\\s]+$'\n    }]\n  }];\n}\nexport const suggestFieldTypes = async input => {\n  try {\n    const response = await axios.post(`${AI_SERVICE_URL}/field-suggestions`, {\n      input\n    });\n    return response.data.suggestions;\n  } catch (error) {\n    console.error('Error fetching field suggestions:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","AI_SERVICE_URL","generateValidationRules","fieldType","response","post","data","rules","error","console","getFieldSuggestions","input","label","type","validationRules","rule","message","regex","suggestFieldTypes","suggestions"],"sources":["D:/Code/auto-form/react-form-builder/src/utils/aiRules.ts"],"sourcesContent":["import axios from 'axios';\n\nconst AI_SERVICE_URL = 'https://api.example.com/ai'; // Replace with actual AI service URL\n\nexport const generateValidationRules = async (fieldType) => {\n    try {\n        const response = await axios.post(`${AI_SERVICE_URL}/validation-rules`, { fieldType });\n        return response.data.rules;\n    } catch (error) {\n        console.error('Error generating validation rules:', error);\n        throw error;\n    }\n};\n\n\nexport function getFieldSuggestions(input: string): AIFieldSuggestion[] {\n    // Example implementation, replace with your AI logic\n    return [\n        {\n            label: 'Email',\n            type: 'email',\n            validationRules: [\n                {\n                    rule: 'required',\n                    message: 'Email is required',\n                    regex: '^[^@\\\\s]+@[^@\\\\s]+\\\\.[^@\\\\s]+$'\n                }\n            ]\n        }\n    ];\n}\n\nexport const suggestFieldTypes = async (input) => {\n    try {\n        const response = await axios.post(`${AI_SERVICE_URL}/field-suggestions`, { input });\n        return response.data.suggestions;\n    } catch (error) {\n        console.error('Error fetching field suggestions:', error);\n        throw error;\n    }\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,cAAc,GAAG,4BAA4B,CAAC,CAAC;;AAErD,OAAO,MAAMC,uBAAuB,GAAG,MAAOC,SAAS,IAAK;EACxD,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAAC,GAAGJ,cAAc,mBAAmB,EAAE;MAAEE;IAAU,CAAC,CAAC;IACtF,OAAOC,QAAQ,CAACE,IAAI,CAACC,KAAK;EAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;IAC1D,MAAMA,KAAK;EACf;AACJ,CAAC;AAGD,OAAO,SAASE,mBAAmBA,CAACC,KAAa,EAAuB;EACpE;EACA,OAAO,CACH;IACIC,KAAK,EAAE,OAAO;IACdC,IAAI,EAAE,OAAO;IACbC,eAAe,EAAE,CACb;MACIC,IAAI,EAAE,UAAU;MAChBC,OAAO,EAAE,mBAAmB;MAC5BC,KAAK,EAAE;IACX,CAAC;EAET,CAAC,CACJ;AACL;AAEA,OAAO,MAAMC,iBAAiB,GAAG,MAAOP,KAAK,IAAK;EAC9C,IAAI;IACA,MAAMP,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAAC,GAAGJ,cAAc,oBAAoB,EAAE;MAAEU;IAAM,CAAC,CAAC;IACnF,OAAOP,QAAQ,CAACE,IAAI,CAACa,WAAW;EACpC,CAAC,CAAC,OAAOX,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;IACzD,MAAMA,KAAK;EACf;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}