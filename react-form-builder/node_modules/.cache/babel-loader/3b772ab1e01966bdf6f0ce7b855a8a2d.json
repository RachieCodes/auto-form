{"ast":null,"code":"var _jsxFileName = \"D:\\\\Code\\\\auto-form\\\\react-form-builder\\\\src\\\\components\\\\LivePreview.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = 'http://localhost:4000/api/options';\nconst LivePreview = ({\n  formData\n}) => {\n  _s();\n  const [fields, setFields] = useState(formData);\n  const [selectedFieldId, setSelectedFieldId] = useState(null);\n  const [options, setOptions] = useState([]);\n  useEffect(() => {\n    setFields(formData);\n  }, [formData]);\n  useEffect(() => {\n    if (selectedFieldId) {\n      fetch(`${API_URL}/${selectedFieldId}`).then(res => res.json()).then(data => setOptions(data));\n    }\n  }, [selectedFieldId]);\n\n  // ...rest of your code (deleteOption, editOption, addOption)...\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Live Preview\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Select Field:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedFieldId || '',\n        onChange: e => setSelectedFieldId(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select a field\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), fields.map(field => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: field.id,\n          children: field.id\n        }, field.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), selectedFieldId && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Options for \", selectedFieldId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: options.map((opt, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: opt,\n            onChange: e => editOption(idx, e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => deleteOption(idx),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 33\n          }, this)]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => addOption('New Option'),\n        children: \"Add Option\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n_s(LivePreview, \"ywEA1EAc+kgcrJGqsz+xZyWoKR4=\");\n_c = LivePreview;\nexport default LivePreview;\nvar _c;\n$RefreshReg$(_c, \"LivePreview\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","API_URL","LivePreview","formData","_s","fields","setFields","selectedFieldId","setSelectedFieldId","options","setOptions","fetch","then","res","json","data","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","map","field","id","opt","idx","type","editOption","onClick","deleteOption","addOption","_c","$RefreshReg$"],"sources":["D:/Code/auto-form/react-form-builder/src/components/LivePreview.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { FormField } from '../types';\n\nconst API_URL = 'http://localhost:4000/api/options';\n\ninterface LivePreviewProps {\n    formData: FormField[];\n}\n\nconst LivePreview: React.FC<LivePreviewProps> = ({ formData }) => {\n    const [fields, setFields] = useState<FormField[]>(formData);\n    const [selectedFieldId, setSelectedFieldId] = useState<string | null>(null);\n    const [options, setOptions] = useState<string[]>([]);\n\n    useEffect(() => {\n        setFields(formData);\n    }, [formData]);\n\n    useEffect(() => {\n        if (selectedFieldId) {\n            fetch(`${API_URL}/${selectedFieldId}`)\n                .then(res => res.json())\n                .then(data => setOptions(data));\n        }\n    }, [selectedFieldId]);\n\n    // ...rest of your code (deleteOption, editOption, addOption)...\n\n    return (\n        <div>\n            <h3>Live Preview</h3>\n            <div>\n                <label>Select Field:</label>\n                <select\n                    value={selectedFieldId || ''}\n                    onChange={e => setSelectedFieldId(e.target.value)}\n                >\n                    <option value=\"\">Select a field</option>\n                    {fields.map(field => (\n                        <option key={field.id} value={field.id}>{field.id}</option>\n                    ))}\n                </select>\n            </div>\n            {selectedFieldId && (\n                <div>\n                    <h4>Options for {selectedFieldId}</h4>\n                    <ul>\n                        {options.map((opt, idx) => (\n                            <li key={idx}>\n                                <input\n                                    type=\"text\"\n                                    value={opt}\n                                    onChange={e => editOption(idx, e.target.value)}\n                                />\n                                <button onClick={() => deleteOption(idx)}>Delete</button>\n                            </li>\n                        ))}\n                    </ul>\n                    <button onClick={() => addOption('New Option')}>Add Option</button>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default LivePreview;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGnD,MAAMC,OAAO,GAAG,mCAAmC;AAMnD,MAAMC,WAAuC,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC9D,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAcK,QAAQ,CAAC;EAC3D,MAAM,CAACI,eAAe,EAAEC,kBAAkB,CAAC,GAAGV,QAAQ,CAAgB,IAAI,CAAC;EAC3E,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAW,EAAE,CAAC;EAEpDD,SAAS,CAAC,MAAM;IACZS,SAAS,CAACH,QAAQ,CAAC;EACvB,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;EAEdN,SAAS,CAAC,MAAM;IACZ,IAAIU,eAAe,EAAE;MACjBI,KAAK,CAAC,GAAGV,OAAO,IAAIM,eAAe,EAAE,CAAC,CACjCK,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAACG,IAAI,IAAIL,UAAU,CAACK,IAAI,CAAC,CAAC;IACvC;EACJ,CAAC,EAAE,CAACR,eAAe,CAAC,CAAC;;EAErB;;EAEA,oBACIP,OAAA;IAAAgB,QAAA,gBACIhB,OAAA;MAAAgB,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBpB,OAAA;MAAAgB,QAAA,gBACIhB,OAAA;QAAAgB,QAAA,EAAO;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC5BpB,OAAA;QACIqB,KAAK,EAAEd,eAAe,IAAI,EAAG;QAC7Be,QAAQ,EAAEC,CAAC,IAAIf,kBAAkB,CAACe,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAAAL,QAAA,gBAElDhB,OAAA;UAAQqB,KAAK,EAAC,EAAE;UAAAL,QAAA,EAAC;QAAc;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EACvCf,MAAM,CAACoB,GAAG,CAACC,KAAK,iBACb1B,OAAA;UAAuBqB,KAAK,EAAEK,KAAK,CAACC,EAAG;UAAAX,QAAA,EAAEU,KAAK,CAACC;QAAE,GAApCD,KAAK,CAACC,EAAE;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAqC,CAC7D,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC,EACLb,eAAe,iBACZP,OAAA;MAAAgB,QAAA,gBACIhB,OAAA;QAAAgB,QAAA,GAAI,cAAY,EAACT,eAAe;MAAA;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACtCpB,OAAA;QAAAgB,QAAA,EACKP,OAAO,CAACgB,GAAG,CAAC,CAACG,GAAG,EAAEC,GAAG,kBAClB7B,OAAA;UAAAgB,QAAA,gBACIhB,OAAA;YACI8B,IAAI,EAAC,MAAM;YACXT,KAAK,EAAEO,GAAI;YACXN,QAAQ,EAAEC,CAAC,IAAIQ,UAAU,CAACF,GAAG,EAAEN,CAAC,CAACC,MAAM,CAACH,KAAK;UAAE;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClD,CAAC,eACFpB,OAAA;YAAQgC,OAAO,EAAEA,CAAA,KAAMC,YAAY,CAACJ,GAAG,CAAE;YAAAb,QAAA,EAAC;UAAM;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA,GANpDS,GAAG;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAOR,CACP;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC,eACLpB,OAAA;QAAQgC,OAAO,EAAEA,CAAA,KAAME,SAAS,CAAC,YAAY,CAAE;QAAAlB,QAAA,EAAC;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClE,CACR;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAAChB,EAAA,CAtDIF,WAAuC;AAAAiC,EAAA,GAAvCjC,WAAuC;AAwD7C,eAAeA,WAAW;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}