{"ast":null,"code":"var _jsxFileName = \"D:\\\\Code\\\\auto-form\\\\react-form-builder\\\\src\\\\components\\\\LivePreview.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LivePreview = ({\n  formData\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"live-preview\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Live Preview\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: formData.fields.map((field, index) => {\n        switch (field.type) {\n          case 'text':\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: field.label\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 13,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                placeholder: field.placeholder\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 14,\n                columnNumber: 37\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 12,\n              columnNumber: 33\n            }, this);\n          case 'number':\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: field.label\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 20,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                placeholder: field.placeholder\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 21,\n                columnNumber: 37\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 19,\n              columnNumber: 33\n            }, this);\n          case 'email':\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: field.label\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 27,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"email\",\n                placeholder: field.placeholder\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 28,\n                columnNumber: 37\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 33\n            }, this);\n          case 'select':\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: field.label\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                children: field.options.map((option, idx) => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: option,\n                  children: option\n                }, idx, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 37,\n                  columnNumber: 45\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 37\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 33\n            }, this);\n          // Add more field types as needed\n          default:\n            return null;\n        }\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 9\n  }, this);\n};\n_c = LivePreview;\nexport default LivePreview;\nvar _c;\n$RefreshReg$(_c, \"LivePreview\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","LivePreview","formData","className","children","fileName","_jsxFileName","lineNumber","columnNumber","fields","map","field","index","type","label","placeholder","options","option","idx","value","_c","$RefreshReg$"],"sources":["D:/Code/auto-form/react-form-builder/src/components/LivePreview.tsx"],"sourcesContent":["import React from 'react';\n\nconst LivePreview: React.FC<{ formData: any }> = ({ formData }) => {\n    return (\n        <div className=\"live-preview\">\n            <h2>Live Preview</h2>\n            <form>\n                {formData.fields.map((field: any, index: number) => {\n                    switch (field.type) {\n                        case 'text':\n                            return (\n                                <div key={index}>\n                                    <label>{field.label}</label>\n                                    <input type=\"text\" placeholder={field.placeholder} />\n                                </div>\n                            );\n                        case 'number':\n                            return (\n                                <div key={index}>\n                                    <label>{field.label}</label>\n                                    <input type=\"number\" placeholder={field.placeholder} />\n                                </div>\n                            );\n                        case 'email':\n                            return (\n                                <div key={index}>\n                                    <label>{field.label}</label>\n                                    <input type=\"email\" placeholder={field.placeholder} />\n                                </div>\n                            );\n                        case 'select':\n                            return (\n                                <div key={index}>\n                                    <label>{field.label}</label>\n                                    <select>\n                                        {field.options.map((option: string, idx: number) => (\n                                            <option key={idx} value={option}>{option}</option>\n                                        ))}\n                                    </select>\n                                </div>\n                            );\n                        // Add more field types as needed\n                        default:\n                            return null;\n                    }\n                })}\n            </form>\n        </div>\n    );\n};\n\nexport default LivePreview;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}