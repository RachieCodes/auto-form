{"ast":null,"code":"var _jsxFileName = \"D:\\\\Code\\\\auto-form\\\\react-form-builder\\\\src\\\\components\\\\FormBuilder.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport DragDropUI from './DragDropUI';\nimport LivePreview from './LivePreview';\nimport MultiStepForm from './MultiStepForm';\nimport ConditionalLogic from './ConditionalLogic';\nimport FieldSuggestions from './FieldSuggestions';\nimport ExportJSONSchema from './ExportJSONSchema';\nimport EmbedCode from './EmbedCode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst INPUT_TYPES = [\"button\", \"checkbox\", \"color\", \"date\", \"datetime-local\", \"email\", \"file\", \"hidden\", \"image\", \"month\", \"number\", \"password\", \"radio\", \"range\", \"reset\", \"search\", \"submit\", \"tel\", \"text\", \"time\", \"url\", \"week\"];\nconst FormBuilder = () => {\n  _s();\n  const [fields, setFields] = useState([]);\n  const [validationRules, setValidationRules] = useState([]);\n  const [newFieldId, setNewFieldId] = useState('');\n  const [newFieldType, setNewFieldType] = useState('text');\n  const [newFieldRequired, setNewFieldRequired] = useState(false);\n  const [editField, setEditField] = useState(null);\n  useEffect(() => {\n    const fetchFields = async () => {\n      try {\n        const res = await fetch('http://localhost:4000/api/fields');\n        const data = await res.json();\n        setFields(data);\n      } catch (err) {\n        console.error('Failed to load fields', err);\n      }\n    };\n    fetchFields();\n  }, []);\n  const addField = async () => {\n    const trimmedId = newFieldId.trim();\n    if (!trimmedId) return;\n    const idExists = fields.some(field => field.id === trimmedId);\n    if (idExists) {\n      alert(`Field ID \"${trimmedId}\" already exists. Please choose a unique ID.`);\n      return;\n    }\n    const newField = {\n      id: trimmedId,\n      label: trimmedId,\n      type: newFieldType,\n      required: newFieldRequired,\n      placeholder: '',\n      options: [],\n      validationRules: []\n    };\n    try {\n      await fetch('http://localhost:4000/api/fields', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(newField)\n      });\n      const res = await fetch('http://localhost:4000/api/fields');\n      const updated = await res.json();\n      setFields(updated);\n      setNewFieldId('');\n      setNewFieldRequired(false);\n    } catch (err) {\n      console.error('Failed to add field', err);\n    }\n  };\n  const removeField = async fieldId => {\n    try {\n      await fetch(`http://localhost:4000/api/fields/${fieldId}`, {\n        method: 'DELETE'\n      });\n      const res = await fetch('http://localhost:4000/api/fields');\n      const updated = await res.json();\n      setFields(updated);\n    } catch (err) {\n      console.error('Failed to remove field', err);\n    }\n  };\n  const startEditField = async field => {\n    try {\n      const res = await fetch(`http://localhost:4000/api/options/${field.id}`);\n      const options = await res.json();\n      setEditField({\n        ...field,\n        options\n      });\n    } catch (err) {\n      console.error(`Failed to fetch options for ${field.id}`, err);\n      setEditField({\n        ...field\n      });\n    }\n  };\n  const saveEditField = () => {\n    if (editField) {\n      setFields(fields.map(f => f.id === editField.id ? editField : f));\n      setEditField(null);\n    }\n  };\n  const cancelEditField = () => setEditField(null);\n  const addOption = async () => {\n    if (!editField) return;\n    try {\n      await fetch(`http://localhost:4000/api/options/${editField.id}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          option: 'New Option'\n        })\n      });\n      const res = await fetch(`http://localhost:4000/api/options/${editField.id}`);\n      const options = await res.json();\n      setEditField({\n        ...editField,\n        options\n      });\n    } catch (err) {\n      console.error(\"Failed to add option\", err);\n    }\n  };\n  const updateOption = async (idx, value) => {\n    if (!editField) return;\n    try {\n      await fetch(`http://localhost:4000/api/options/${editField.id}/${idx}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          option: value\n        })\n      });\n      const res = await fetch(`http://localhost:4000/api/options/${editField.id}`);\n      const options = await res.json();\n      setEditField({\n        ...editField,\n        options\n      });\n    } catch (err) {\n      console.error(\"Failed to update option\", err);\n    }\n  };\n  const removeOption = async idx => {\n    if (!editField) return;\n    try {\n      await fetch(`http://localhost:4000/api/options/${editField.id}/${idx}`, {\n        method: 'DELETE'\n      });\n      const res = await fetch(`http://localhost:4000/api/options/${editField.id}`);\n      const options = await res.json();\n      setEditField({\n        ...editField,\n        options\n      });\n    } catch (err) {\n      console.error(\"Failed to remove option\", err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Add Field\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Field ID\",\n      value: newFieldId,\n      onChange: e => setNewFieldId(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: newFieldType,\n      onChange: e => setNewFieldType(e.target.value),\n      children: INPUT_TYPES.map(type => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: type,\n        children: type\n      }, type, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Required:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: newFieldRequired,\n        onChange: e => setNewFieldRequired(e.target.checked)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addField,\n      children: \"Add Field\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Fields\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: fields.map(field => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: field.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }, this), \" (\", field.type, \")\", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => startEditField(field),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => removeField(field.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 13\n        }, this)]\n      }, field.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this), editField && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: '1px solid #ccc',\n        padding: '1em',\n        marginTop: '1em'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Edit Field\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"ID:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: editField.id,\n          onChange: e => setEditField({\n            ...editField,\n            id: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Type:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: editField.type,\n          onChange: e => setEditField({\n            ...editField,\n            type: e.target.value\n          }),\n          children: INPUT_TYPES.map(type => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: type,\n            children: type\n          }, type, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Required:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: editField.required,\n          onChange: e => setEditField({\n            ...editField,\n            required: e.target.checked\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Placeholder:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: editField.placeholder,\n          onChange: e => setEditField({\n            ...editField,\n            placeholder: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Options:\", /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: addOption,\n          children: \"Add Option\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: (editField.options || []).map((opt, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: opt,\n              onChange: e => updateOption(idx, e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => removeOption(idx),\n              children: \"Remove\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 19\n            }, this)]\n          }, idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: saveEditField,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: cancelEditField,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(DragDropUI, {\n      fields: fields,\n      setFields: setFields\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LivePreview, {\n      formData: fields\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MultiStepForm, {\n      steps: fields,\n      onSubmit: () => {}\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ConditionalLogic, {\n      fields: fields,\n      onUpdate: setFields\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FieldSuggestions, {\n      onSuggest: setValidationRules\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ExportJSONSchema, {\n      formConfig: {\n        fields,\n        validationRules\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EmbedCode, {\n      formCode: JSON.stringify({\n        fields,\n        validationRules\n      }, null, 2)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 5\n  }, this);\n};\n_s(FormBuilder, \"IQpr1eQCkQNxmjX82eYbnk+GV7o=\");\n_c = FormBuilder;\nexport default FormBuilder;\nvar _c;\n$RefreshReg$(_c, \"FormBuilder\");","map":{"version":3,"names":["React","useState","useEffect","DragDropUI","LivePreview","MultiStepForm","ConditionalLogic","FieldSuggestions","ExportJSONSchema","EmbedCode","jsxDEV","_jsxDEV","INPUT_TYPES","FormBuilder","_s","fields","setFields","validationRules","setValidationRules","newFieldId","setNewFieldId","newFieldType","setNewFieldType","newFieldRequired","setNewFieldRequired","editField","setEditField","fetchFields","res","fetch","data","json","err","console","error","addField","trimmedId","trim","idExists","some","field","id","alert","newField","label","type","required","placeholder","options","method","headers","body","JSON","stringify","updated","removeField","fieldId","startEditField","saveEditField","map","f","cancelEditField","addOption","option","updateOption","idx","value","removeOption","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","checked","onClick","style","border","padding","marginTop","opt","formData","steps","onSubmit","onUpdate","onSuggest","formConfig","formCode","_c","$RefreshReg$"],"sources":["D:/Code/auto-form/react-form-builder/src/components/FormBuilder.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { FormField, ValidationRule } from '../types';\nimport DragDropUI from './DragDropUI';\nimport LivePreview from './LivePreview';\nimport MultiStepForm from './MultiStepForm';\nimport ConditionalLogic from './ConditionalLogic';\nimport FieldSuggestions from './FieldSuggestions';\nimport ExportJSONSchema from './ExportJSONSchema';\nimport EmbedCode from './EmbedCode';\n\nconst INPUT_TYPES = [\n  \"button\", \"checkbox\", \"color\", \"date\", \"datetime-local\", \"email\", \"file\", \"hidden\",\n  \"image\", \"month\", \"number\", \"password\", \"radio\", \"range\", \"reset\", \"search\",\n  \"submit\", \"tel\", \"text\", \"time\", \"url\", \"week\"\n];\n\nconst FormBuilder: React.FC = () => {\n  const [fields, setFields] = useState<FormField[]>([]);\n  const [validationRules, setValidationRules] = useState<ValidationRule[]>([]);\n  const [newFieldId, setNewFieldId] = useState('');\n  const [newFieldType, setNewFieldType] = useState('text');\n  const [newFieldRequired, setNewFieldRequired] = useState(false);\n  const [editField, setEditField] = useState<FormField | null>(null);\n\n  useEffect(() => {\n    const fetchFields = async () => {\n      try {\n        const res = await fetch('http://localhost:4000/api/fields');\n        const data = await res.json();\n        setFields(data);\n      } catch (err) {\n        console.error('Failed to load fields', err);\n      }\n    };\n    fetchFields();\n  }, []);\n\n const addField = async () => {\n  const trimmedId = newFieldId.trim();\n  if (!trimmedId) return;\n\n  const idExists = fields.some(field => field.id === trimmedId);\n  if (idExists) {\n    alert(`Field ID \"${trimmedId}\" already exists. Please choose a unique ID.`);\n    return;\n  }\n\n  const newField: FormField = {\n    id: trimmedId,\n    label: trimmedId,\n    type: newFieldType,\n    required: newFieldRequired,\n    placeholder: '',\n    options: [],\n    validationRules: []\n  };\n\n  try {\n    await fetch('http://localhost:4000/api/fields', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(newField)\n    });\n    const res = await fetch('http://localhost:4000/api/fields');\n    const updated = await res.json();\n    setFields(updated);\n    setNewFieldId('');\n    setNewFieldRequired(false);\n  } catch (err) {\n    console.error('Failed to add field', err);\n  }\n};\n\n\n  const removeField = async (fieldId: string) => {\n    try {\n      await fetch(`http://localhost:4000/api/fields/${fieldId}`, {\n        method: 'DELETE'\n      });\n      const res = await fetch('http://localhost:4000/api/fields');\n      const updated = await res.json();\n      setFields(updated);\n    } catch (err) {\n      console.error('Failed to remove field', err);\n    }\n  };\n\n  const startEditField = async (field: FormField) => {\n    try {\n      const res = await fetch(`http://localhost:4000/api/options/${field.id}`);\n      const options = await res.json();\n      setEditField({ ...field, options });\n    } catch (err) {\n      console.error(`Failed to fetch options for ${field.id}`, err);\n      setEditField({ ...field });\n    }\n  };\n\n  const saveEditField = () => {\n    if (editField) {\n      setFields(fields.map(f => f.id === editField.id ? editField : f));\n      setEditField(null);\n    }\n  };\n\n  const cancelEditField = () => setEditField(null);\n\n  const addOption = async () => {\n    if (!editField) return;\n    try {\n      await fetch(`http://localhost:4000/api/options/${editField.id}`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ option: 'New Option' })\n      });\n      const res = await fetch(`http://localhost:4000/api/options/${editField.id}`);\n      const options = await res.json();\n      setEditField({ ...editField, options });\n    } catch (err) {\n      console.error(\"Failed to add option\", err);\n    }\n  };\n\n  const updateOption = async (idx: number, value: string) => {\n    if (!editField) return;\n    try {\n      await fetch(`http://localhost:4000/api/options/${editField.id}/${idx}`, {\n        method: 'PUT',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ option: value })\n      });\n      const res = await fetch(`http://localhost:4000/api/options/${editField.id}`);\n      const options = await res.json();\n      setEditField({ ...editField, options });\n    } catch (err) {\n      console.error(\"Failed to update option\", err);\n    }\n  };\n\n  const removeOption = async (idx: number) => {\n    if (!editField) return;\n    try {\n      await fetch(`http://localhost:4000/api/options/${editField.id}/${idx}`, {\n        method: 'DELETE'\n      });\n      const res = await fetch(`http://localhost:4000/api/options/${editField.id}`);\n      const options = await res.json();\n      setEditField({ ...editField, options });\n    } catch (err) {\n      console.error(\"Failed to remove option\", err);\n    }\n  };\n\n  return (\n    <div>\n      <h3>Add Field</h3>\n      <input\n        type=\"text\"\n        placeholder=\"Field ID\"\n        value={newFieldId}\n        onChange={e => setNewFieldId(e.target.value)}\n      />\n      <select value={newFieldType} onChange={e => setNewFieldType(e.target.value)}>\n        {INPUT_TYPES.map(type => (\n          <option key={type} value={type}>{type}</option>\n        ))}\n      </select>\n      <label>\n        Required:\n        <input\n          type=\"checkbox\"\n          checked={newFieldRequired}\n          onChange={e => setNewFieldRequired(e.target.checked)}\n        />\n      </label>\n      <button onClick={addField}>Add Field</button>\n\n      <hr />\n      <h3>Fields</h3>\n      <ul>\n        {fields.map(field => (\n          <li key={field.id}>\n            <strong>{field.id}</strong> ({field.type})\n            <button onClick={() => startEditField(field)}>Edit</button>\n            <button onClick={() => removeField(field.id)}>Delete</button>\n          </li>\n        ))}\n      </ul>\n\n      {editField && (\n        <div style={{ border: '1px solid #ccc', padding: '1em', marginTop: '1em' }}>\n          <h4>Edit Field</h4>\n          <label>\n            ID:\n            <input\n              type=\"text\"\n              value={editField.id}\n              onChange={e => setEditField({ ...editField, id: e.target.value })}\n            />\n          </label>\n          <br />\n          <label>\n            Type:\n            <select\n              value={editField.type}\n              onChange={e => setEditField({ ...editField, type: e.target.value })}\n            >\n              {INPUT_TYPES.map(type => (\n                <option key={type} value={type}>{type}</option>\n              ))}\n            </select>\n          </label>\n          <br />\n          <label>\n            Required:\n            <input\n              type=\"checkbox\"\n              checked={editField.required}\n              onChange={e => setEditField({ ...editField, required: e.target.checked })}\n            />\n          </label>\n          <br />\n          <label>\n            Placeholder:\n            <input\n              type=\"text\"\n              value={editField.placeholder}\n              onChange={e => setEditField({ ...editField, placeholder: e.target.value })}\n            />\n          </label>\n          <br />\n          <label>\n            Options:\n            <button type=\"button\" onClick={addOption}>Add Option</button>\n            <ul>\n              {(editField.options || []).map((opt, idx) => (\n                <li key={idx}>\n                  <input\n                    type=\"text\"\n                    value={opt}\n                    onChange={e => updateOption(idx, e.target.value)}\n                  />\n                  <button type=\"button\" onClick={() => removeOption(idx)}>Remove</button>\n                </li>\n              ))}\n            </ul>\n          </label>\n          <br />\n          <button onClick={saveEditField}>Save</button>\n          <button onClick={cancelEditField}>Cancel</button>\n        </div>\n      )}\n\n      <DragDropUI fields={fields} setFields={setFields} />\n      <LivePreview formData={fields} />\n      <MultiStepForm steps={fields} onSubmit={() => {}} />\n      <ConditionalLogic fields={fields} onUpdate={setFields} />\n      <FieldSuggestions onSuggest={setValidationRules} />\n      <ExportJSONSchema formConfig={{ fields, validationRules }} />\n      <EmbedCode formCode={JSON.stringify({ fields, validationRules }, null, 2)} />\n    </div>\n  );\n};\n\nexport default FormBuilder;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}