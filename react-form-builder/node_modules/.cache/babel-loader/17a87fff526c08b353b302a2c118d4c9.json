{"ast":null,"code":"var _jsxFileName = \"D:\\\\Code\\\\auto-form\\\\react-form-builder\\\\src\\\\components\\\\FormBuilder.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport DragDropUI from './DragDropUI';\nimport LivePreview from './LivePreview';\nimport MultiStepForm from './MultiStepForm';\nimport ConditionalLogic from './ConditionalLogic';\nimport FieldSuggestions from './FieldSuggestions';\nimport ExportJSONSchema from './ExportJSONSchema';\nimport EmbedCode from './EmbedCode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst INPUT_TYPES = [\"button\", \"checkbox\", \"color\", \"date\", \"datetime-local\", \"email\", \"file\", \"hidden\", \"image\", \"month\", \"number\", \"password\", \"radio\", \"range\", \"reset\", \"search\", \"submit\", \"tel\", \"text\", \"time\", \"url\", \"week\"];\nconst FormBuilder = ({\n  fields,\n  setFields\n}) => {\n  _s();\n  const [validationRules, setValidationRules] = useState([]);\n  const [currentStep, setCurrentStep] = useState(0);\n  const [newFieldType, setNewFieldType] = useState('text');\n  const [newFieldLabel, setNewFieldLabel] = useState('');\n  const addField = () => {\n    if (!newFieldLabel) return;\n    const newField = {\n      id: `${newFieldType}-${Date.now()}`,\n      label: newFieldLabel,\n      type: newFieldType,\n      required: false,\n      placeholder: '',\n      options: [],\n      validationRules: []\n    };\n    setFields([...fields, newField]);\n    setNewFieldLabel('');\n  };\n  const removeField = fieldId => {\n    setFields(fields.filter(field => field.id !== fieldId));\n  };\n  const updateField = updatedFields => {\n    setFields(updatedFields);\n  };\n  const nextStep = () => setCurrentStep(currentStep + 1);\n  const previousStep = () => setCurrentStep(Math.max(currentStep - 1, 0));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Add Field\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Field label\",\n      value: newFieldLabel,\n      onChange: e => setNewFieldLabel(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: newFieldType,\n      onChange: e => setNewFieldType(e.target.value),\n      children: INPUT_TYPES.map(type => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: type,\n        children: type\n      }, type, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addField,\n      children: \"Add Field\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DragDropUI, {\n      fields: fields,\n      setFields: setFields\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(LivePreview, {\n      formData: fields\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MultiStepForm, {\n      steps: fields,\n      onSubmit: () => {}\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ConditionalLogic, {\n      fields: fields,\n      onUpdate: updateField\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FieldSuggestions, {\n      onSuggest: setValidationRules\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ExportJSONSchema, {\n      formConfig: {\n        fields,\n        validationRules\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(EmbedCode, {\n      formCode: JSON.stringify({\n        fields,\n        validationRules\n      }, null, 2)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n_s(FormBuilder, \"iXkrwH39JYUxNus/zUZ4696O5Hg=\");\n_c = FormBuilder;\nexport default FormBuilder;\nvar _c;\n$RefreshReg$(_c, \"FormBuilder\");","map":{"version":3,"names":["React","useState","DragDropUI","LivePreview","MultiStepForm","ConditionalLogic","FieldSuggestions","ExportJSONSchema","EmbedCode","jsxDEV","_jsxDEV","INPUT_TYPES","FormBuilder","fields","setFields","_s","validationRules","setValidationRules","currentStep","setCurrentStep","newFieldType","setNewFieldType","newFieldLabel","setNewFieldLabel","addField","newField","id","Date","now","label","type","required","placeholder","options","removeField","fieldId","filter","field","updateField","updatedFields","nextStep","previousStep","Math","max","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","map","onClick","formData","steps","onSubmit","onUpdate","onSuggest","formConfig","formCode","JSON","stringify","_c","$RefreshReg$"],"sources":["D:/Code/auto-form/react-form-builder/src/components/FormBuilder.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { FormField, ValidationRule } from '../types';\nimport DragDropUI from './DragDropUI';\nimport LivePreview from './LivePreview';\nimport MultiStepForm from './MultiStepForm';\nimport ConditionalLogic from './ConditionalLogic';\nimport FieldSuggestions from './FieldSuggestions';\nimport ExportJSONSchema from './ExportJSONSchema';\nimport EmbedCode from './EmbedCode';\n\nconst INPUT_TYPES = [\n    \"button\", \"checkbox\", \"color\", \"date\", \"datetime-local\", \"email\", \"file\", \"hidden\",\n    \"image\", \"month\", \"number\", \"password\", \"radio\", \"range\", \"reset\", \"search\",\n    \"submit\", \"tel\", \"text\", \"time\", \"url\", \"week\"\n];\n\ninterface FormBuilderProps {\n    fields: FormField[];\n    setFields: (fields: FormField[]) => void;\n}\n\nconst FormBuilder: React.FC<FormBuilderProps> = ({ fields, setFields }) => {\n    const [validationRules, setValidationRules] = useState<ValidationRule[]>([]);\n    const [currentStep, setCurrentStep] = useState(0);\n    const [newFieldType, setNewFieldType] = useState<string>('text');\n    const [newFieldLabel, setNewFieldLabel] = useState<string>('');\n\n    const addField = () => {\n        if (!newFieldLabel) return;\n        const newField: FormField = {\n            id: `${newFieldType}-${Date.now()}`,\n            label: newFieldLabel,\n            type: newFieldType,\n            required: false,\n            placeholder: '',\n            options: [],\n            validationRules: []\n        };\n        setFields([...fields, newField]);\n        setNewFieldLabel('');\n    };\n\n    const removeField = (fieldId: string) => {\n        setFields(fields.filter(field => field.id !== fieldId));\n    };\n\n    const updateField = (updatedFields: FormField[]) => {\n        setFields(updatedFields);\n    };\n\n    const nextStep = () => setCurrentStep(currentStep + 1);\n    const previousStep = () => setCurrentStep(Math.max(currentStep - 1, 0));\n\n    return (\n        <div>\n            <h3>Add Field</h3>\n            <input\n                type=\"text\"\n                placeholder=\"Field label\"\n                value={newFieldLabel}\n                onChange={e => setNewFieldLabel(e.target.value)}\n            />\n            <select\n                value={newFieldType}\n                onChange={e => setNewFieldType(e.target.value)}\n            >\n                {INPUT_TYPES.map(type => (\n                    <option key={type} value={type}>{type}</option>\n                ))}\n            </select>\n            <button onClick={addField}>Add Field</button>\n            <hr />\n            <DragDropUI fields={fields} setFields={setFields} />\n            <LivePreview formData={fields} />\n            <MultiStepForm steps={fields} onSubmit={() => {}} />\n            <ConditionalLogic fields={fields} onUpdate={updateField} />\n            <FieldSuggestions onSuggest={setValidationRules} />\n            <ExportJSONSchema formConfig={{ fields, validationRules }} />\n            <EmbedCode formCode={JSON.stringify({ fields, validationRules }, null, 2)} />\n        </div>\n    );\n};\n\nexport default FormBuilder;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}