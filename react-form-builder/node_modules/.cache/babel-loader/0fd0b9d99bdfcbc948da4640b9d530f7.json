{"ast":null,"code":"import axios from 'axios';\nconst AI_SERVICE_URL = 'https://api.example.com/ai'; // Replace with actual AI service URL\n\nexport const generateValidationRules = async fieldType => {\n  try {\n    const response = await axios.post(`${AI_SERVICE_URL}/validation-rules`, {\n      fieldType\n    });\n    return response.data.rules;\n  } catch (error) {\n    console.error('Error generating validation rules:', error);\n    throw error;\n  }\n};\nexport const suggestFieldTypes = async input => {\n  try {\n    const response = await axios.post(`${AI_SERVICE_URL}/field-suggestions`, {\n      input\n    });\n    return response.data.suggestions;\n  } catch (error) {\n    console.error('Error fetching field suggestions:', error);\n    throw error;\n  }\n};\n\n// Synchronous example for local/demo use\nexport function getFieldSuggestions(input) {\n  // Simple demo logic, replace with your own\n  if (input.toLowerCase().includes('email')) {\n    return [{\n      label: 'Email',\n      type: 'email',\n      validationRules: [{\n        rule: 'required',\n        message: 'Email is required',\n        regex: '^[^@\\\\s]+@[^@\\\\s]+\\\\.[^@\\\\s]+$'\n      }]\n    }];\n  }\n  return [{\n    label: 'Name',\n    type: 'text',\n    validationRules: [{\n      rule: 'required',\n      message: 'Name is required'\n    }]\n  }];\n}","map":{"version":3,"names":["axios","AI_SERVICE_URL","generateValidationRules","fieldType","response","post","data","rules","error","console","suggestFieldTypes","input","suggestions","getFieldSuggestions","toLowerCase","includes","label","type","validationRules","rule","message","regex"],"sources":["D:/Code/auto-form/react-form-builder/src/utils/aiRules.ts"],"sourcesContent":["import axios from 'axios';\nimport { AIFieldSuggestion, ValidationRule } from '../types';\n\nconst AI_SERVICE_URL = 'https://api.example.com/ai'; // Replace with actual AI service URL\n\nexport const generateValidationRules = async (fieldType: string): Promise<ValidationRule[]> => {\n    try {\n        const response = await axios.post(`${AI_SERVICE_URL}/validation-rules`, { fieldType });\n        return response.data.rules;\n    } catch (error) {\n        console.error('Error generating validation rules:', error);\n        throw error;\n    }\n};\n\nexport const suggestFieldTypes = async (input: string): Promise<AIFieldSuggestion[]> => {\n    try {\n        const response = await axios.post(`${AI_SERVICE_URL}/field-suggestions`, { input });\n        return response.data.suggestions;\n    } catch (error) {\n        console.error('Error fetching field suggestions:', error);\n        throw error;\n    }\n};\n\n// Synchronous example for local/demo use\nexport function getFieldSuggestions(input: string): AIFieldSuggestion[] {\n    // Simple demo logic, replace with your own\n    if (input.toLowerCase().includes('email')) {\n        return [\n            {\n                label: 'Email',\n                type: 'email',\n                validationRules: [\n                    {\n                        rule: 'required',\n                        message: 'Email is required',\n                        regex: '^[^@\\\\s]+@[^@\\\\s]+\\\\.[^@\\\\s]+$'\n                    }\n                ]\n            }\n        ];\n    }\n    return [\n        {\n            label: 'Name',\n            type: 'text',\n            validationRules: [\n                {\n                    rule: 'required',\n                    message: 'Name is required'\n                }\n            ]\n        }\n    ];\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAGzB,MAAMC,cAAc,GAAG,4BAA4B,CAAC,CAAC;;AAErD,OAAO,MAAMC,uBAAuB,GAAG,MAAOC,SAAiB,IAAgC;EAC3F,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAAC,GAAGJ,cAAc,mBAAmB,EAAE;MAAEE;IAAU,CAAC,CAAC;IACtF,OAAOC,QAAQ,CAACE,IAAI,CAACC,KAAK;EAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;IAC1D,MAAMA,KAAK;EACf;AACJ,CAAC;AAED,OAAO,MAAME,iBAAiB,GAAG,MAAOC,KAAa,IAAmC;EACpF,IAAI;IACA,MAAMP,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAAC,GAAGJ,cAAc,oBAAoB,EAAE;MAAEU;IAAM,CAAC,CAAC;IACnF,OAAOP,QAAQ,CAACE,IAAI,CAACM,WAAW;EACpC,CAAC,CAAC,OAAOJ,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;IACzD,MAAMA,KAAK;EACf;AACJ,CAAC;;AAED;AACA,OAAO,SAASK,mBAAmBA,CAACF,KAAa,EAAuB;EACpE;EACA,IAAIA,KAAK,CAACG,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC,OAAO,CAAC,EAAE;IACvC,OAAO,CACH;MACIC,KAAK,EAAE,OAAO;MACdC,IAAI,EAAE,OAAO;MACbC,eAAe,EAAE,CACb;QACIC,IAAI,EAAE,UAAU;QAChBC,OAAO,EAAE,mBAAmB;QAC5BC,KAAK,EAAE;MACX,CAAC;IAET,CAAC,CACJ;EACL;EACA,OAAO,CACH;IACIL,KAAK,EAAE,MAAM;IACbC,IAAI,EAAE,MAAM;IACZC,eAAe,EAAE,CACb;MACIC,IAAI,EAAE,UAAU;MAChBC,OAAO,EAAE;IACb,CAAC;EAET,CAAC,CACJ;AACL","ignoreList":[]},"metadata":{},"sourceType":"module"}